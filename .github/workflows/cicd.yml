  name: CICD - Frontend Only

  on:
    push:
      branches: [main]

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        # Checkout source code
        - name: Checkout source
          uses: actions/checkout@v3

      # Build Frontend Docker Image
        - name: Build Frontend Docker Image
          run: |
            docker build -t kkwk1997/my-app:latest -f Dockerfile .


        # Login to Docker Hub
        - name: Login to Docker Hub
          run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

        # Push Frontend Docker Image
        - name: Push Frontend Docker Image
          run: docker push kkwk1997/my-app:latest

    # archive-backend:
    #   stage: archive-backend

    #   before_script:
    #     - apt-get update
    #     - apt-get install zip -y

    #   script:
    #     - echo "Archiving lambda code"
    #     - zip -r $CI_PROJECT_NAME.zip *

    #   artifacts:
    #     paths:
    #       - $CI_PROJECT_NAME.zip

    deploy-frontend:
      needs: build
      runs-on: [self-hosted, Linux, X64] 
      steps:
        # Pull Frontend Docker Image
        - name: Pull Frontend Docker Image
          run: |
            docker system prune -f
            docker pull kkwk1997/my-app:latest

        # Stop existing Frontend container
        - name: Stop existing Frontend container
          run: docker stop my-app-container || true

        # Remove existing Frontend container
        - name: Remove Frontend container
          run: docker rm my-app-container || true

        # Deploy Frontend container
        - name: Deploy Frontend
          run: docker run -d -p 80:80 --name my-app-container kkwk1997/my-app:latest
    
    # deploy-backend:
    #   stage: deploy-backend

    #   before_script:
    #     - pip install awscli
    #     - aws --version

    #   script:
    #     - echo "Deploying code"
    #     - aws lambda update-function-code --function-name $LAMBDA_FUNCTION --zip-file fileb://$CI_PROJECT_NAME.zip
